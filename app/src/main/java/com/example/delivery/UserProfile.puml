@startuml
!theme plain
skinparam classAttributeIconSize 0
hide empty methods
hide empty members
hide circle

package Model <<Folder>> {
    class Card {
        - id: String
        - cardNumber: String
        - cardExpiryDate: String
        - cardCVC: int
        - cardUserID: String
        - isMain: boolean
        + getters/setters()
    }

    class ChatMessage {
        - messageId: String
        - orderId: String
        - senderId: String
        - text: String
        - timestamp: Timestamp
        + getters/setters()
    }

    class Courier {
        - id: String
        - firstName: String
        - surName: String
        - phone: String
        - typeOfCourier: String
        - rating: float
        - balance: String
        - dailyCompletedOrders: int
        - totalCompletedOrders: int
        - bonusPoints: int
        - isVerified: boolean
        - avatarUrl: String
        + getters/setters()
    }

    class RouteOrder {
        - orderId: String
        - userId: String
        - courierId: String
        - routePoints: List<Point>
        - isActive: boolean
        - isCompleted: boolean
        - estimatedCost: double
        + getters/setters()
    }

    class User {
        - id: String
        - name: String
        - email: String
        - password: String
        - balance: String
        - isAdmin: boolean
        - avatarUrl: String
        + getters/setters()
    }

    class SupportChat {
        - id: String
        - userId: String
        - topic: String
        - status: String
        + getters/setters()
    }

    class CourierLocation {
        - id: String
        - orderId: String
        - courierId: String
        - courierLocation: List<SerializedPoint>
        + getters/setters()
    }
}

package Repository <<Folder>> {
    class CardRepository {
        - cardsCollection: CollectionReference
        + addCard()
        + getCardById()
        + updateMainCard()
        + deleteCard()
    }

    class ChatRepository {
        - chatsCollection: CollectionReference
        + sendMessage()
        + getMessagesQuery()
        + checkChatExists()
    }

    class CourierRepository {
        - courierCollection: CollectionReference
        + addCourier()
        + getCourierById()
        + updateCourierRating()
        + blockCourier()
        + checkAndResetTariff()
        + updateCourierTariff()
        + unblockCourier()
    }

    class RouteOrderRepository {
        - firestore: FirebaseFirestore
        + saveRouteOrder()
        + getRouteOrderById()
        + completeOrder()
        + getActiveOrderForCourier()
        + getAllPendingRouteOrdersForCourier()
        + setOrderRated()
        + cancelOrder()
        + updateCourierForOrder()
    }

    class UserRepository {
        - usersCollection: CollectionReference
        + addUser()
        + getUserById()
        + deleteUserById()
        + makeUserAdmin()
    }

    class SupportChatRepository {
        - chatsRef: CollectionReference
        + createChat()
        + getMessagesQuery()
        + closeChat()
    }

    class CourierLocationRepository {
        + getCourierLocationByOrderId()
    }
}

CardRepository --> Card
ChatRepository --> ChatMessage
CourierRepository --> Courier
RouteOrderRepository --> RouteOrder
UserRepository --> User
SupportChatRepository --> SupportChat
CourierLocationRepository --> CourierLocation

RouteOrder "1" -- "0..*" ChatMessage
Courier "1" -- "0..*" RouteOrder
User "1" -- "0..*" Card
CourierLocation "1" -- "1" RouteOrder

@enduml